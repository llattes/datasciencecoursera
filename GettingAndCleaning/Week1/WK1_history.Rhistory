length(data[!is.na(data)])
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
data <- pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
data <- pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
data2 <- round(data, digits = 3)
typeof(data)
typeof(data2)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
data <- pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
data <- pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 70:72)
data <- pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 23)
data <- pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 70:72)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 70:72)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 70:72)
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 23)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/pollutantmean.R')
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 23)
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "nitrate", 70:72)
pollutantmean("~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source('~/DataScience/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 1)
complete("specdata", 1)[T]
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 1)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 1)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 1)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 1)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 1)
complete("specdata", 3)
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/.active-rstudio-document')
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
f <- complete("specdata", 30:25)
View(f)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
f <- complete("specdata", 30:25)
View(f)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
f <- complete("specdata", 30:25)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
f <- complete("specdata", 30:25)
View(f)
source('~/DataScience/datasciencecoursera/Rprogramming/Week2/Assignment/complete.R')
complete("specdata", 30:25)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
source('~/DataScience/datasciencecoursera/corr.R')
corr("specdata")
source('~/DataScience/datasciencecoursera/corr.R')
corr("specdata")
source('~/DataScience/datasciencecoursera/corr.R')
corr("specdata")
?cor
source('~/DataScience/datasciencecoursera/corr.R')
corr("specdata")
df <- corr("specdata")
View(df)
cor(x = df, use = complete.obs)
cor(x = df,use = "complete.obs")
sulf <- df[[2]]
nitr <- df[[3]]
cor(x = sulf, y = nitr, use = "complete.obs")
fx <- cor(x = sulf, y = nitr, use = "complete.obs")
fx <- cor(x = sulf, y = nitr)
source('~/DataScience/datasciencecoursera/corr.R')
corr("specdata")
cr <- corr("specdata")
summary(cre)
summary(cr)
source('~/DataScience/datasciencecoursera/corr.R')
source('~/DataScience/datasciencecoursera/corr.R')
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
source('~/DataScience/datasciencecoursera/corr.R')
cr <- corr("specdata", 5000)
cr <- corr("specdata", 150)
cr <- corr("specdata", 400)
head(cr)
## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
source('~/DataScience/datasciencecoursera/corr.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source('~/DataScience/datasciencecoursera/corr.R')
submit()
source('~/DataScience/datasciencecoursera/corr.R')
submit()
load("~/DataScience/datasciencecoursera/.RData")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
T == T
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(x > 7)
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
View(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
?runif
a <- array(rnorm(2 * 2 * 10), c(2,2,10))
View(a)
apply(a, c(1,2), function(v) {x <- 0})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; x})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; dim(v)})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; dim(v[,1])})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; dim(v[1,])})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; sum(v)}
)
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; ncol(v)})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; nrow(v)})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v[1,])
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v[1,]})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v[1,,]})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v[,, 1]})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v[,, 1][10, ]})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v})
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; class(v)})
?apply
apply(a, c(1,2), function(v) {x <- 0; x = x + 1; max(v)})
ueke <- apply(a, c(1,2), function(v) {x <- 0; x = x + 1; v})
View(ueke)
clear
library(datasets)
data(iris)
?iris
iris
iris$Sepal.Length
lapply(X = iris$Sepal.Length, FUN = mean)
View(iris)
View(iris)
lapply(iris, function(i) i)
lapply(iris, function(i) i$Species == virginica)
lapply(iris, function(i) i[$Species == virginica]])
lapply(iris, function(i) i[Species])
lapply(iris, function(i) class(i))
lapply(iris, function(i) i$Species)
lapply(iris, function(i) i[[Species]])
lapply(iris, function(i) i[[$Species]])
lapply(iris, function(i) i)
v <- lapply(iris, function(i) i)
v <- lapply(iris, function(i) i[5])
v <- lapply(iris, function(i) i[[5]])
v2 <- lapply(iris, function(i) i[[5]])
virg <- iris$Species
virg <- iris$Species[iris$species == 'virginica']
View(virg)
virg <- iris$Species['virginica']
virg <- iris$Species[iris$species == 3]
virg <- iris$Species
subsets<-split(iris, iris$Species, drop=TRUE)
subsets[[3]]
subsets[[3]][5]
subsets[[3]][1]
mean(subsets[[3]][1])
subsets[[3]][1]
lapply(X = subsets[[3]][1], mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
mtcars
mtcars$cyl
split(mtcars, mtcars$cyl,drop = TRUE)
bynoofcyls <- split(mtcars, mtcars$cyl,drop = TRUE)
sapply(X = bynoofcyls$mpg, mean)
sapply(bynoofcyls$mpg, mean)
r <- sapply(bynoofcyls$mpg, mean)
split(mtcars$mpg, mtcars$cyl)
bynoofcyls$mpg
bynoofcyls$`8`
bynoofcyls$`8`$mpg
lapply(bynoofcyls, function(x) x$`8`)
lapply(bynoofcyls, function(x) x)
lapply(bynoofcyls, function(x) x[`8`
])
sapply(split(mtcars$hp, mtcars$cyl), mean)
vv <- sapply(split(mtcars$hp, mtcars$cyl), mean)
abs(vv[1] - vv[3])
data(iris)
iris
tapply(X = iris, INDEX = iris$Species,FUN = mean)
tapply(X = iris$Sepal.Length, INDEX = iris$Species,FUN = mean)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
dim(flags)
summary(flags)
head(flags)
sapply(flags, unique)
vapply(X = flags, FUN = unique, FUN.VALUE = numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(x = plants, n = 10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = (c(0.3, 0.7)))
flips <- sample(c(0,1), 100, replace = TRUE, prob = (c(0.3, 0.7)))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(100, 25)
rnorm(10, 100, 25)
?rpois
rpois(5, c(10))
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
UKDriverDeaths
data(UKDriverDeaths)
ddeaths <- data(UKDriverDeaths)
ddeaths <- data("UKDriverDeaths")
?data
data(UKDriverDeaths)
ddeaths <- UKDriverDeaths
ddeaths2 <- data(UKDriverDeaths)
ddeaths2
data(UKDriverDeaths)
ddeaths <- UKDriverDeaths
ddeaths
class(ddeaths)
data(mtcars)
mtcars
data(UKDriverDeaths)
UKDriverDeaths
str(UKDriverDeaths)
.subset2(UKDriverDeaths, 1)
.subset2(UKDriverDeaths, 4)
.subset2(UKDriverDeaths, 66)
.subset2(mtcars, 66)
.subset2(mtcars, 32)
.subset2(mtcars, 11)
.subset2(mtcars, 11)[32]
.subset2(mtcars, 11)[31]
dim(UKDriverDeaths)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(mtcars)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(mtcars)
iteratedataset(UKDriverDeaths)
data(mtcars)
mtcars
dim(mtcars)
Inf
Inf > 1
-Inf > 1
colnames(mtcars)
row.names.data.frame(mtcars)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(mtcars)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
clear
iteratedataset(mtcars)
View(mtcars)
?data.frame
cars <- iteratedataset(mtcars)
cars$topObservations
levels(cars$topObservations)
summary(cars$topObservations)
summary(cars$worstObservations)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(mtcars)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(mtcars)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(mtcars)
data(cars)
cars
iteratedataset(cars)
data(airquality)
airquality
iteratedataset(airquality)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(airquality)
NA
is.numeric(NA)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(airquality)
source('~/DataScience/datasciencecoursera/iteratedataset.R')
iteratedataset(airquality)
data(occupationalStatus)
occupationalStatus
dim(occupationalStatus)
iteratedataset(occupationalStatus)
.subset2(occupationalStatus, 2)[2]
.subset2(occupationalStatus, 2)
data(swiss)
swiss
str(swiss)
iteratedataset(swiss)
getwd()
if (!file.exists("GettingAndCleaning")) {dir.create("GettingAndCleaning")}
if (!file.exists("GettingAndCleaning")) {dir.create("GettingAndCleaning")}
fileurl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(url = fileurl, destfile = "GettingAndCleaning/cameras.csv", method = "curl")
list.files("GettingAndCleaning")
datedownloaded <- date()
fileurlxlsx <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(url = fileurlxlsx, destfile = "GettingAndCleaning/cameras.xlsx", method = "curl")
datedownloadedxlsx <- date()
library(xlsx)
install.packages("xlsx")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
cameraData <- read.xlsx("GettingAndCleaning/cameras.xlsx", sheetIndex = 1, header = TRUE)
head(cameraData)
install.packages("XML")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
fileurlxml <- "http://www.w3schools.com/xml/simple.xml"
docxml <- xmlTreeParse(fileurlxlsx, useInternalNodes = TRUE)
docxml <- xmlTreeParse(fileurlxml, useInternalNodes = TRUE)
rootnodexml <- xmlRoot(docxml)
xmlName(rootnodexml)
names(rootnodexml)
rootnodexml
rootnodexml[[1]]
rootnodexml[["food"]]
rootnodexml[["price"]]
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
jsondata <- fromJSON("https://api.github.com/users/llattes/repos")
names(jsondata)
View(jsondata)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?vignette
vignette(all = FALSE)
vignette("xlsx")
tables()
install.packages("data.table")
quiz1file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = quiz1file, destfile = "GettingAndCleaning/quiz1.csv", method = "curl")
quiz1data <- read.csv("GettingAndCleaning/quiz1.csv")
class(quiz1data$VAL)
summary(quiz1data$VAL)
quiz1data$VAL[quiz1data$VAL == 24]
is.numeric(quiz1data$VAL[quiz1data$VAL == 24])
quiz1values <- factor(quiz1data$VAL)
quiz1values
View(quiz1data)
summary(quiz1data)
summary(quiz1values)
quiz1data$FES
quiz1xls <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
cameraData <- read.xlsx("GettingAndCleaning/quiz1.xlsx", sheetIndex = 1, header = TRUE, rowIndex = 18:23, colIndex = 7:15)
download.file(url = quiz1xls, destfile = "GettingAndCleaning/quiz1.xlsx", method = "curl")
cameraData <- read.xlsx("GettingAndCleaning/quiz1.xlsx", sheetIndex = 1, header = TRUE, rowIndex = 18:23, colIndex = 7:15)
cameraData
dat <- read.xlsx("GettingAndCleaning/quiz1.xlsx", sheetIndex = 1, header = TRUE, rowIndex = 18:23, colIndex = 7:15)
View(cameraData)
View(cameraData)
sum(dat$Zip*dat$Ext,na.rm=T)
xmlquiz1 <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes = TRUE)
quiz1xmlfile <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xmlquiz1 <- xmlTreeParse(quiz1xmlfile, useInternalNodes = TRUE)
quiz1xmlfile <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xmlquiz1 <- xmlTreeParse(quiz1xmlfile, useInternalNodes = TRUE)
xmlquiz1
quiz1rootnode <- xmlRoot(xmlquiz1)
xpathSApply(quiz1rootnode, "//zipcode", xmlValue)
zipcodesasfactor <- factor(xpathSApply(quiz1rootnode, "//zipcode", xmlValue))
summary(zipcodesasfactor)
lastquiz1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url = lastquiz1, destfile = "GettingAndCleaning/last.csv", method = "curl")
fread
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
lastdata <- fread(input = "GettingAndCleaning/last.csv")
lastdata$pwgtp15
lastdata$SEX
lastdata[,mean(pwgtp15),by=SEX]
rowMeans(lastdata)[lastdata$SEX==1]; rowMeans(lastdata)[lastdata$SEX==2]
save.image("~/DataScience/datasciencecoursera/GettingAndCleaning/Week1/WK1_environment.RData")
savehistory("~/DataScience/datasciencecoursera/GettingAndCleaning/Week1/WK1_history.Rhistory")
